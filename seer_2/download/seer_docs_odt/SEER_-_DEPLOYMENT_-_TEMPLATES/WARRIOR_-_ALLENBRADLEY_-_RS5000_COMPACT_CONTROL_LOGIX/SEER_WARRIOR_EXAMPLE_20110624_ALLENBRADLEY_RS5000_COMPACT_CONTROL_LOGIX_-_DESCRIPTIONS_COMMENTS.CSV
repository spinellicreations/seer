remark,"CSV-Import-Export"
remark,"Date = Mon Jul 04 15:29:46 2011"
remark,"Version = RSLogix 5000 v17.00"
remark,"Owner = Vince Spinelli"
remark,"Company = Sorrento Lactalis American Group"
0.3
TYPE,SCOPE,NAME,DESCRIPTION,DATATYPE,SPECIFIER,ATTRIBUTES
TAG,,F101x0,"SEER_IO_1$NANALOG COMM$NNULL REGISTER(S)","REAL","","(RADIX := Float)"
TAG,,F101x1,"SEER_IO_1$NANALOG COMM$NCYCLE TOTALIZER","REAL","","(RADIX := Float)"
TAG,,F101x2,"SEER_IO_1$NANALOG COMM$NJOB NUMBER","REAL","","(RADIX := Float)"
TAG,,F101x3,"SEER_IO_1$NANALOG COMM$NSCHEDULE NUMBER","REAL","","(RADIX := Float)"
TAG,,F101x4,"SEER_IO_1$NANALOG COMM$NOPERATOR ID","REAL","","(RADIX := Float)"
TAG,,N100x0,"SEER_IO_0$NDISCRETE COMM$NBINARY ELEMENTS INCLUDED","INT","","(RADIX := Decimal)"
COMMENT,,N100x0,"SEER_IO_0$NDISCRETE COMM$NCYCLE RESET$NCOMMAND TRIGGER",,"N100x0.1"
COMMENT,,N100x0,"SEER_IO_0$NDISCRETE COMM$NCYCLE RESET$NONE SHOT",,"N100x0.2"
COMMENT,,N100x0,"SEER_IO_0$NDISCRETE COMM$NMACHINE IS IN$NMAINTENANCE MODE",,"N100x0.3"
COMMENT,,N100x0,"SEER_IO_0$NDISCRETE COMM$NCYCLE COUNT +1$NONE SHOT",,"N100x0.4"
COMMENT,,N100x0,"SEER_IO_0$NDISCRETE COMM$NCYCLE COUNT +1$NCYCLE DETECTED",,"N100x0.5"
COMMENT,,N100x0,"SEER_IO_0$NDISCRETE COMM$NNO MACHINE ALARMS$NHAVE BEEN DETECTED",,"N100x0.6"
COMMENT,,N100x0,"SEER_IO_0$NDISCRETE COMM$NNO MAJOR ALARMS$NHAVE BEEN DETECTED",,"N100x0.7"
COMMENT,,N100x0,"SEER_IO_0$NDISCRETE COMM$NNO MINOR ALARMS $NHAVE BEEN DETECTED",,"N100x0.8"
COMMENT,,N100x0,"SEER_IO_0$NDISCRETE COMM$NIDLE WITHOUT CYCLE$NDETECTED",,"N100x0.9"
COMMENT,,N100x0,"SEER_IO_0$NDISCRETE COMM$NALWAYS FALSE INSTRUCTION$N(ALWAYS = 0)",,"N100x0.10"
COMMENT,,N100x0,"SEER_IO_0$NDISCRETE COMM$NJOB $'0$'$NONE SHOT",,"N100x0.11"
COMMENT,,N100x0,"SEER_IO_0$NDISCRETE COMM$NJOB $'0$'$NACTIVE$NNO JOB RUNNING",,"N100x0.12"
TAG,,N100x1,"SEER_IO_0$NTEMPLATE TUTORIAL REGISTERS$N(REPLACE WITH YOUR BITS AND TAGS)","INT","","(RADIX := Decimal)"
COMMENT,,N100x1,"SEER_IO_0$NTEMPLATE TUTORIAL$NREPLACE WITH SOME LOGIC TO INDICATE PACKAGE TYPE $Q1$Q",,"N100x1.0"
COMMENT,,N100x1,"SEER_IO_0$NTEMPLATE TUTORIAL$NREPLACE WITH SOME LOGIC TO INDICATE PACKAGE TYPE $Q2$Q",,"N100x1.1"
COMMENT,,N100x1,"SEER_IO_0$NTEMPLATE TUTORIAL$NREPLACE WITH SOME LOGIC TO INDICATE PACKAGE TYPE $Q3$Q",,"N100x1.2"
COMMENT,,N100x1,"SEER_IO_0$NTEMPLATE TUTORIAL$NREPLACE WITH SOME LOGIC TO INDICATE CUSTOM ALARM $Q1$Q",,"N100x1.3"
COMMENT,,N100x1,"SEER_IO_0$NTEMPLATE TUTORIAL$NREPLACE WITH SOME LOGIC TO INDICATE CUSTOM ALARM $Q2$Q",,"N100x1.4"
COMMENT,,N100x1,"SEER_IO_0$NTEMPLATE TUTORIAL$NREPLACE WITH SOME LOGIC TO INDICATE CUSTOM ALARM $Q3$Q",,"N100x1.5"
COMMENT,,N100x1,"SEER_IO_0$NTEMPLATE TUTORIAL$NREPLACE WITH SOME LOGIC TO INDICATE CUSTOM ALARM $Q4$Q",,"N100x1.6"
COMMENT,,N100x1,"SEER_IO_0$NTEMPLATE TUTORIAL$NREPLACE WITH SOME LOGIC TO INDICATE CUSTOM WARNING $Q1$Q",,"N100x1.7"
COMMENT,,N100x1,"SEER_IO_0$NTEMPLATE TUTORIAL$NREPLACE WITH SOME LOGIC TO INDICATE CUSTOM WARNING $Q2$Q",,"N100x1.8"
COMMENT,,N100x1,"SEER_IO_0$NTEMPLATE TUTORIAL$NREPLACE WITH SOME LOGIC TO INDICATE CUSTOM WARNING $Q3$Q",,"N100x1.9"
COMMENT,,N100x1,"SEER_IO_0$NTEMPLATE TUTORIAL$NREPLACE WITH SOME LOGIC TO INDICATE THAT THE MACHINE HAS CYCLED 1 TIME",,"N100x1.10"
TAG,,N100x2,"SEER_IO_0$NDISCRETE COMM$NALARM STATE","INT","","(RADIX := Decimal)"
TAG,,N100x3,"SEER_IO_0$NDISCRETE COMM$NALARM STATE PENDING","INT","","(RADIX := Decimal)"
TAG,,N100x4,"SEER_IO_0$NDISCRETE COMM$NMACHINE STATE","INT","","(RADIX := Decimal)"
TAG,,N100x5,"SEER_IO_0$NDISCRETE COMM$NCORRECTIVE ACTION","INT","","(RADIX := Decimal)"
TAG,,N100x6,"SEER_IO_0$NDISCRETE COMM$NPACKAGES PER CYCLE","INT","","(RADIX := Decimal)"
TAG,,N100x7,"SEER_IO_0$NDISCRETE COMM$NPACKAGE CLASS$N(TYPE)","INT","","(RADIX := Decimal)"
TAG,,N100x8,"SEER_IO_0$NDISCRETE COMM$NMAJOR ALARM ID$NPENDING","INT","","(RADIX := Decimal)"
TAG,,N100x9,"SEER_IO_0$NDISCRETE COMM$NMINOR ALARM ID$NPENDING","INT","","(RADIX := Decimal)"
TAG,,T102x0,"SEER_IO_2$NTIMERS$NIDLE TIME WITHOUT CYCLE DETECTED$NTIME BASE = 0.001 SEC","TIMER","",""
TYPE,SCOPE,ROUTINE,COMMENT,OWNING_ELEMENT,LOCATION
RCOMMENT,"MainProgram","MainRoutine","MAIN  //  PRIMARY SYSTEM CONTROL AND SUBROUTINE INVOCATION$N$NCALL ALL SYSTEM AND MACHINE CONTROL FUNCTIONS (OR SUBROUTINES) PRIOR TO $NFINALLY CALLING SEER_0 AND SEER_1 LADDERS.$N$N","JSR(SEER_1,0)","0"
RCOMMENT,"MainProgram","SEER_0","SEER_0 - SETTINGS // W.A.R.R.I.O.R.$N$NCYCLE COUNT +1$N$N-- CYCLE DETECTED (TRIGGER)$N$N","OTE(N100x0.5)","0"
RCOMMENT,"MainProgram","SEER_0","$NPACKAGES PER CYCLE$N$N-- NUMBER OF DISCRETE PACKAGES PRODUCED EACH CYCLE$N-- $QBOX$Q OR $QPACK$Q COUNT, -NOT- EACHES (UNLESS USING $QUNIPAC$Q IN LOCALOPTIONS FOR MODEL)$N$N-- YOU MAY USE LOGIC TO SET THIS VARIABLE TO DIFFERENT VALUES DEPENDING ON WHAT$N   YOUR MACHINE IS SETUP TO RUN (ASSUMES CONTROLLER IS AWARE OF WHAT MACHINE IS$N   SETUP TO RUN).$N$N","MOV(2,N100x6)","1"
RCOMMENT,"MainProgram","SEER_0","$NPACKAGE CLASS$N$N-- INDICATES WHAT TYPE OF PACKAGE IS RUNNING AT THE PRESENT TIME.$N-- EXAMPLE:$N-- -- 0 = UNIPAC (SINGLE ITEMS OR $'EACHES$')$N-- -- 1 = 6-PACK 12 OUNCE CUPS $N-- -- 2 = 12-PACK 12 OUNCE CUPS$N-- -- 3 = 6-PACK 32 OUNCE CUPS$N-- -- ETC... ETC...$N$N-- YOU MAY USE LOGIC TO SET THIS VARIABLE TO DIFFERENT VALUES DEPENDING ON WHAT$N   YOUR MACHINE IS SETUP TO RUN (ASSUMES CONTROLLER IS AWARE OF WHAT MACHINE IS$N   SETUP TO RUN).$N$N","MOV(3,N100x7)","2"
RCOMMENT,"MainProgram","SEER_0","$NMACHINE ALARMS$N$N-- ALARM PENDING REGISTERS$N$N-- NOTE$N-- -- MAJOR ALARMS = ANY ALARM WHICH CAUSES MACHINE STOP$N-- -- MINOR ALARMS = WARNINGS OR OTHER ALARMS THAT DO NOT PREVENT MACHINE FROM RUNNING$N$N-- VALUES$N-- -- 0 = NO ALARMS DETECTED$N-- -- 1 = MAINTENANCE MODE ENABLED$N-- -- 2 = RESERVED - DO NOT USE$N-- -- 3 = RESERVED - DO NOT USE$N-- -- 4 .. ---> .. N = YOUR CUSTOM ALARMS$N$N","MOV(7,N100x8)","3"
RCOMMENT,"MainProgram","SEER_1","SEER_1 - RUNTIME // W.A.R.R.I.O.R.$N$NCYCLE COUNT$N$N-- cycle count represents machine cycles, NOT pieces (or units, or $'whatever-s$') per cycle.$N-- use a sufficiently large register (such as a $'Float$' or $'BigINT$') to store a number large enough to represent an entire job$'s cycle count.$N-- count shall reset to zero (0) when SEER pushes a reset command.$N-- the reset command must be executed, and then the reset trigger (written to by SEER) reset, so as to avoid infinitely looping the reset command.$N$N","MOV(0.0,F101x1)","0"
RCOMMENT,"MainProgram","SEER_1","$NMACHINE STATE$N$N-- 0 = IDLE, UNKNOWN CAUSE OF DOWNTIME, SEE CORRECTIVE ACTION$N-- 1 = IDLE, FAULT DETECTED CAUSING DOWNTIME$N-- 2 = MAINTENANCE MODE (DIAGNOSTIC OR REPAIR, CYCLE COUNT INHIBITED)$N-- 3 = RUNNING WITH WARNING (RUNNING, FAULT DETECTED, -NOT- CAUSING DOWNTIME)$N-- 4 = RUNNING (RUNNING, FAULT -NOT- DETECTED / RUNNING NORMALLY)$N","OTE(N100x0.9)","2"
RCOMMENT,"MainProgram","SEER_1","$NMACHINE ALARMS$N$N-- NO MACHINE ALARMS HAVE BEEN DETECTED (TRIGGERS)$N$N-- NOTE$N-- -- MAJOR ALARMS = ANY ALARM WHICH CAUSES MACHINE STOP$N-- -- MINOR ALARMS = WARNINGS OR OTHER ALARMS THAT DO NOT PREVENT MACHINE FROM RUNNING$N$N-- VALUES$N-- -- 0 = NO ALARMS DETECTED$N-- -- 1 = MAINTENANCE MODE ENABLED$N-- -- 2 = RESERVED - DO NOT USE$N-- -- 3 = RESERVED - DO NOT USE$N-- -- 4 .. ---> .. N = YOUR CUSTOM ALARMS$N$N","OTE(N100x0.8)","8"
RCOMMENT,"MainProgram","SEER_1","$NCORRECTIVE ACTION REGISTER$N$N-- WHEN MACHINE IS RUNNING WITHOUT FAULTS (STATE = 4)$N-- -- (FORCE) SET CORRECTIVEACTION = 0$N-- -- (FORCE) SET ALARM = 0$N$N-- REQUIRED$N-- -- 0 = NONE ENTERED$N-- -- 2 = SCHEDULED DOWN OR CLEANING$N-- -- 3 = OPERATOR ON LUNCH OR BREAK$N$N-- NOTE$N-- -- 1 DOES NOT EXIST - DEPRECATED AFTER INITIAL DEPLOYMENT$N-- -- 2 AND 3 ARE SET BY SEER, NOT BY THE LOCAL CONTROLLER$N$N","MOV(0,N100x2)","10"
RCOMMENT,"MainProgram","SEER_1","$NACTIVE JOB HOLDING REGISTERS$N$N-- REQUIRED$N-- -- OPERATOR ID (FLOAT OR BIGINT)$N-- -- JOB NUMBER (FLOAT OR BIGINT)$N-- -- SCHEDULE NUMBER (FLOAT OR BIGINT)$N$N-- JOB $Q0$Q$N-- -- JOB ID $Q0$Q IS ALWAYS $QNONE$Q (NOT RUNNING)$N-- -- BY SETTING JOB ID TO $Q0$Q, THE OPERATOR IS EFFECTIVELY PUTTING THE MACHINE INTO$N       A FORCED $QSCHEDULED DOWN OR CLEANING$Q ACTION, SO LET$'S FORCE THAT.$N$N-- NOTES$N-- -- DO -NOT- EXECUTE LOGIC UPON THESE REGISTERS, THEY EXIST$N       PURELY FOR USE BY SEER, WHICH WILL WRITE AND READ BACK$N       DATA AS NEEDED.$N-- -- THE $'ALWAYS FALSE$' BIT IN FRONT OF THIS RUNG RENDERS$N       THIS LADDER AS NOTHING MORE THAN A PLACEHOLDER FOR$N       YOUR REFERENCE.$N$N","ADD(F101x4,0.0,F101x4)","11"
